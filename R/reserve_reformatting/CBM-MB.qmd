---
title: "CBM-MB"
format: html
---
Re-run (updated file_in) 10/4/2023 due to corrections in input file: MSHST3 transect changed to MCHST3.  

```{r}
library(tidyverse)
library(readxl)
library(writexl)
```

```{r}
# starting path for data
path_start <- here::here("submitted_data", "data")
file_in <- here::here(path_start, "CBM", "Veg", "Monie Bay", 
                      "MASTER MBR_EV_Transect_Data_Corrected_2017.xlsx")

# excel_sheets(file_in)
```

from mapping script - to read in file and deal with coordinates  

## Station Table  

Appears to be old typo for MCMST3 P2 and P5. Per Kyle: change P2 from 48.6 to 46.6.  

```{r}
cbm_prep <- read_xlsx(file_in, sheet = "Site Description",
                    skip = 9)
names(cbm_prep)[3:4] <- c("Lat_dms", "Long_dms")

cbm_mb <- read_xlsx(file_in, sheet = "Site Description",
                     skip = 11,
                     col_names = FALSE)
names(cbm_mb) <- names(cbm_prep)
rm(cbm_prep)

cbm_mb <- cbm_mb %>% 
    fill(Transect) %>% 
    mutate(Reserve = "CBM",
           SiteID = "MB") %>% 
    select(Reserve, SiteID,
           TransectID = Transect,
           PlotID = Plot,
           Lat_dms, Long_dms,
           everything())

# convert gps coordinates
cbm_mb2 <- cbm_mb %>% 
    mutate(Lat_dms2 = str_replace_all(Lat_dms, "[^[:digit:][\\.]]+", " "),
           Lat_dms2 = str_trim(Lat_dms2),
           Long_dms2 = str_replace_all(Long_dms, "[^[:digit:][\\.]]+", " "),
           Long_dms2 = str_trim(Long_dms2),
           ID = paste(TransectID, PlotID, sep = "-")) %>% 
    separate(Lat_dms2, into = c("Lat_deg", "Lat_min", "Lat_sec"),
             sep = " ") %>% 
    separate(Long_dms2, into = c("Long_deg", "Long_min", "Long_sec"),
             sep = " ") %>% 
    mutate(across(Lat_deg:Long_sec,
                  as.numeric)) %>% 
    mutate(Lat_sec = case_when(ID == "MCMST3-P2" ~ 46.9,
                               ID == "MCMST3-P5" ~ 47.8,
                               TRUE ~ Lat_sec)) %>% 
    mutate(Lat = round(Lat_deg + (Lat_min/60) + (Lat_sec/3600), 5),
           Long = round(-1*(Long_deg + (Long_min/60) + (Long_sec/3600)), 5))

stn_tbl <- cbm_mb %>% 
    mutate(Lat = cbm_mb2$Lat,
           Long = cbm_mb2$Long,
           "SSAM-1" = ifelse(!is.na(PlotID), "yes", NA),
           Orthometric_Height = NA,
           Height_Relative_to_MLLW = NA,
           Type = ifelse(!is.na(PlotID), "E", NA)) %>% 
    select(-Lat_dms, -Long_dms) %>% 
    fill(Heading, .direction = "down") %>% 
    filter(!is.na(PlotID)) %>% 
    select(Reserve, SiteID, TransectID, PlotID,
           Lat, Long, Type,
           Orthometric_Height,
           Height_Relative_to_MLLW,
           Distance = `Distance (m)`,
           `SSAM-1`,
           everything())
```

## Cover  

```{r}
covr_in <- read_excel(file_in, sheet = "Cover Data", skip = 9)
names(covr_in)[32] <- "Unknown1"
names(covr_in)[33] <- "Unknown2"
covr_in[,35:37] <- NULL
```

## NA date issues  

```{r}
# covr_in %>% 
#     filter(is.na(Date)) %>% 
#     View()
```

Random row with nothing in it; remove based on Year being NA

```{r}
covr_in <- covr_in %>% 
    filter(!is.na(Year))
```

As in CBM-OPC script, get rid of the 0s in these plots.  

```{r}
# date is NA. keep only columns that have an entry *somewhere*.
NAdates <- covr_in %>% 
    filter(is.na(Date)) %>% 
    select(-Comments) %>% 
    janitor::remove_empty("cols")

# get the names of the species columns that need to change
cols_to_change <- names(NAdates)[5:8]

# index the rows that don't have any entries for the species and remove.
# do rowSums on "not NAs" in the species columns and 
# keep those which are greater than 0
inds <- which(rowSums(!is.na(NAdates[5:ncol(NAdates)])) > 0)
    
to_investigate <- NAdates[inds, ]

# and change
rows_to_change <- covr_in %>% 
    mutate(rownum = row_number()) %>% 
    filter(Transect == "MCMST1",
           Plot == "P3",
           Year ==2015) %>% 
    select(rownum) %>% 
    unlist()

covr_in[rows_to_change, cols_to_change] <- NA
```



Assign date based on sampling date for other plots in the transect, as in CBM-OPC script.  

Some transects were sampled over multiple dates. I'm assigning the first date for each transect for simplicity (even though the actual sample date may have been one of the other days - these are plots that were not sampled).  

```{r}
transectDates <- covr_in %>% 
    select(Transect, Year, Date) %>% 
    distinct() %>% 
    filter(!is.na(Date)) %>% 
    rename(Date2 = Date)

twoDates <- transectDates %>% 
    select(Transect, Year) %>% 
    duplicated()

transectSingle <- transectDates[-which(twoDates == TRUE), ]

covr_in <- left_join(covr_in, transectSingle) %>% 
    mutate(Date = case_when(is.na(Date) ~ Date2,
                            TRUE ~ Date)) %>% 
    select(-Date2)
```



## Density  

```{r}
dens_in <- read_excel(file_in, sheet = "Stem Density", skip = 9)
names(dens_in)[27] <- "Unknown1"
names(dens_in)[28] <- "Unknown2"
dens <- dens_in %>% 
    janitor::remove_empty("cols") %>% 
    relocate(Comments, .after = Date)
```

```{r}
# add Density_ prefix for joining in cover sheet
dens_to_join <- dens 
densNames <- paste("Density", names(dens), sep = "_")
names(dens_to_join)[7:ncol(dens_to_join)] <- densNames[7:ncol(dens_to_join)]
```

## Heights  

```{r}
hts_in <- read_excel(file_in, sheet = "Max Height Data", skip = 9)
names(hts_in)[27] <- "Unknown1"
names(hts_in)[28] <- "Unknown2"
hts <- hts_in %>% 
    janitor::remove_empty("cols") %>% 
    relocate(Comments, .after = Date)
```

```{r}
# add Maximum Canopy Height_ prefix for joining in cover sheet
hts_to_join <- hts
htsNames <- paste("Maximum Canopy Height", names(hts), sep = "_")

names(hts_to_join)[7:ncol(hts_to_join)] <- htsNames[7:ncol(hts_to_join)]
```

## Species List  

```{r}
spp_covr <- read_excel(file_in, 
                       sheet = "Cover Data", 
                       skip = 8, n_max = 2,
                       col_names = FALSE)
names(spp_covr) <- names(covr_in)
spp_covr <- spp_covr %>% 
    filter(row_number() != 2) %>% 
    select(Bareground:Unknown2)

spp_names <- spp_covr %>% 
    pivot_longer(everything(),
                 names_to = "Species",
                 values_to = "Common name")
```

# Generate Cover sheet  


## Add columns of station table info  


```{r}
stn_to_join <- stn_tbl %>% 
    select(Reserve, SiteID, TransectID,
           PlotID, Orthometric_Height,
           Height_Relative_to_MLLW,
           Distance) %>% 
    filter(!is.na(PlotID))
```

```{r}
covr_sheet <- covr_in %>% 
    rename(TransectID = Transect,
           PlotID = Plot) %>% 
    left_join(stn_to_join) %>% 
    select(Reserve, `Salinity Regime`, SiteID,
           Year, Date, 
           TransectID, PlotID,
           Orthometric_Height,
           Height_Relative_to_MLLW,
           Distance,
           Notes = Comments,
           everything())
```



## Create F_ columns for Cover sheet  

Don't actually add them yet because we want them behind the density and height columns, but these are the names.

```{r}
spps_in_covr <- names(covr_sheet)[12:ncol(covr_sheet)]
f_names <- paste("F", spps_in_covr, sep = "_")

# test <- covr_sheet
# test[ , f_names] <- NA
```



## Join Density and Height  

Remember to get rid of NA dates (first check to make sure there's not real data in there)  

```{r}
sum(is.na(dens_to_join$Date))
dens_to_join %>%
    select(-`Salinity Regime`) %>% 
    filter(is.na(Date)) %>% 
    janitor::remove_empty("cols") 

sum(is.na(hts_to_join$Date))
hts_to_join %>% 
    select(-`Salinity Regime`) %>% 
    filter(is.na(Date)) %>% 
    janitor::remove_empty("cols") # %>% View()
```

Everything with NA for date in the density and heights sheets also has no data, so can be disregarded.  

```{r}
dens_to_join <- dens_to_join %>% 
    filter(!is.na(Date)) %>% 
    select(-Comments) %>% 
    rename(TransectID = Transect,
           PlotID = Plot)

hts_to_join <- hts_to_join %>% 
    filter(!is.na(Date)) %>% 
    select(-Comments) %>% 
    rename(TransectID = Transect,
           PlotID = Plot)
```

# Cover sheet for real  

Then remove the date column and make Year, Month, Day ones.  

```{r}
covr_sheet <- left_join(covr_sheet, dens_to_join) %>% 
    left_join(hts_to_join)

# add F_ columns
covr_sheet[ , f_names] <- NA

covr_sheet <- covr_sheet %>% 
    mutate(Year = lubridate::year(Date),
           Month = lubridate::month(Date),
           Day = lubridate::mday(Date)) %>% 
    relocate(c(Month, Day), .after = Year) %>% 
    select(-Date)
    
```


# Density sheet  

Want to keep all the same rows, but only the density columns  

Then remove the 'Density' prefix  

```{r}
dens_sheet <- covr_sheet %>% 
    select(Reserve:Notes,
           starts_with("Density_"))

names(dens_sheet) <- str_remove(names(dens_sheet), "Density_")
```



# Heights sheet  

Same for heights  

```{r}
hts_sheet <- covr_sheet %>% 
    select(Reserve:Notes,
           starts_with("Maximum Canopy Height_"))

names(hts_sheet) <- str_remove(names(hts_sheet), "Maximum Canopy Height_")
```


# Compile workbook  

```{r}
out_path <- here::here("wrangled_data", "NMST", "CBM-MB_NMST.xlsx")
write_xlsx(list(Station_Table = stn_tbl,
                Species_Names = spp_names,
                Cover = covr_sheet,
                Density = dens_sheet,
                Height = hts_sheet),
           path = out_path,
           format_headers = TRUE)
```


